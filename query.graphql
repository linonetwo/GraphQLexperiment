query power51 {
  user {
    id
    logined
    username
  }
  config {
    alarmtypes {
      code
      label
    }
  }
  company {
    id
    pie {
      total
      current
      rate
      unit
    }
    children {
      id
    }
  }
}

mutation getToken {
  getToken(username: "User123456", password: "123456") {
    token
    error
  }
}



# /api/info/entry  /api/data/site/{id}/overview
# 厂区信息，说明还有它有哪些变电站或子厂区，厂区有自己的饼图数据
# 同时也能表示变电站的数据，可以包括饼图和进线列表等数据
type PowerEntityType {
  id: Int!
  name: String!
  type: EntityType!
  alarmInfos(pagesize: Int!, pageIndex: Int!, orderBy: OrderByType, fromTime: String, toTime: String, filterAlarmCode: String): [AlarmInfoType!]
  pie: pieGraphType
  infos: [InfoType] # 显示一些「本日最大负荷」、「本月最大负荷」、「告警数量」等信息
  wires: [WireType]
  cabinets: [CabinetType]
  children: [PowerEntityType]
}

enum EntityType {
  District
  Site
  Company
}

enum OrderByType {
  time
  name
  type
  count
}

# /api/alarm/site/{id}?pz=20&pi=1&o=time /api/alarm/device/{id}?pagesize=20&pageindex=1
# 一条告警信息
type AlarmInfoType {
  id: Int! # 告警ID
  code: String! # 警告编号 实际上是一个数字
  timestamp: String! # 警告时间，类似「2016-07-01 00:00:00」
  readed: Boolean! # 已读

  districtId: Int # 厂区ID
  districtName: String # 厂区名称
  siteId: Int # 变电站ID
  siteName: String # 变电站名称
  gatewayId: Int # 网关ID
  gatewayName: String # 网关名称
  cabinetId: Int # 设备所处机柜的全局唯一ID
  cabinetName: String # 设备所处机柜的名称
  deviceId: Int # 设备的全局唯一ID
  deviceName: String # 设备的名称
}

# /api/data/index/pie
type pieGraphType {
  total: Int! # 当前负荷，受权限控制影响，此处可能是0
  current: Int! # 总额定负荷，受权限控制影响，此处可能是0
  rate: String!
  unit: String! # 客户想使用的单位
}

# /api/data/site/{id}/overview
# 通用的显示格式，用于进线和变电站
type InfoType {
  name: String! # 用于显示这个数据是啥
  display: String! # 用于显示这个值有多大
  value: Float! # 一般用于计算
}

# /api/data/site/{id}/overview
# 每个变电站都会有进线，需要显示它们的负载
type WireType {
  name: String! # 就是数据源中的 wire，显示「进线1」这样的线名
  current: Int! # 当前负荷
  total: Int! # 能承载的总负荷
  unit: String!
  indicators: InfoType! # 「有功电度」、「无功电度」什么的
}

# /api/info/site/{id}/cabinets
type CabinetType {
  id: Int!
  name: String! # 柜子名
  type: String! # 「d01」这样的柜子类型
  address: String! # 「1-2-1-3」 这样的柜号
  devices: [DeviceType!]
}

# /api/data/site/{id}/cabinets/switches  /api/data/device/{id}/realtime
# 变电站下的每个柜子都有一个到多个开关
type DeviceType {
  id: Int!
  name: String! # 给开关取的名字
  realtimeData: [InfoType!] # 设备的实时数据
  alarmInfos(pagesize: Int!, pageIndex: Int!, orderBy: OrderByType, fromTime: String, toTime: String, filterAlarmCode: String): [AlarmInfoType!]  
  isOn: Boolean # 开还是关，后端叫它 value
}
